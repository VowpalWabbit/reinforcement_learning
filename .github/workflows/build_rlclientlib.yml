name: Build RLClientLib

on:
  push:
    branches:
      - master
      - 'releases/**'
  pull_request:
    branches:
      - '*'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  build:
    name: rlclientlib-${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: "windows-latest" }
          - { os: "ubuntu-latest" }
          - { os: "macos-latest" }
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Setup MSVC Developer Command Prompt
        if: ${{ startsWith(matrix.config.os, 'windows') }}
        uses: ilammy/msvc-dev-cmd@v1
      - uses: lukka/get-cmake@latest
      - uses: lukka/run-vcpkg@main
        with:
          vcpkgDirectory: '${{ github.workspace }}/ext_libs/vcpkg'
          vcpkgJsonGlob: "${{ github.workspace }}/vcpkg.json"
      - name: Configure
        run: >
          cmake -S . -B build -G Ninja
          -DCMAKE_BUILD_TYPE=Debug
          -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}/ext_libs/vcpkg/scripts/buildsystems/vcpkg.cmake"
          -DFMT_SYS_DEP=ON
          -DSPDLOG_SYS_DEP=ON
          -Drlclientlib_BUILD_ONNXRUNTIME_EXTENSION=${{ startsWith(matrix.config.os, 'ubuntu') }}
      - name: Build
        run: |
          cmake --build build
      - name: Test
        run: |
          cd build
          ctest --verbose --output-on-failure
      - name: Test with Valgrind
        if: ${{ startsWith(matrix.config.os, 'ubuntu') }}
        run: |
          cd build
          valgrind --quiet --error-exitcode=100 --undef-value-errors=no --leak-check=full ./unit_test/rltest -- valgrind
