name: Windows Nuget

on:
  push:
    branches:
      - master
      - 'releases/**'
  pull_request:
    branches:
      - '*'

jobs:
  build_nuget_windows:
    name: nuget.${{ matrix.toolset }}.${{ matrix.arch_config.arch }}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: ["windows-2019"]
        toolset: ["v141"]
        arch_config:
        - { arch: x64, generator_arch: x64}
  
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Dependencies
        run: >
          vcpkg install
          --host-triplet=${{ matrix.arch_config.arch }}-windows
          --triplet=${{ matrix.arch_config.arch }}-windows
          cpprestsdk
          openssl-windows
          zlib
          flatbuffers
          boost-filesystem
          boost-thread
          boost-program-options
          boost-test
          boost-align
          boost-math
          boost-uuid
      - name: Configure
        run: >
          cmake -S . -B build
          -G "Visual Studio 15 2017" -A ${{ matrix.arch_config.generator_arch }}
          -T ${{ matrix.toolset }}
          -DNATIVE_NUGET_PLATFORM_TAG=${{ matrix.arch_config.arch }}
          -DBUILD_TESTING=Off
          -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake
          -DVCPKG_TARGET_TRIPLET=${{ matrix.arch_config.arch }}-windows
          -DBUILD_SHARED_LIBS=TRUE
      - name: Build and install
        run: |
          cmake --build build --config Release -t rlclientlib -v
          cmake --install build --prefix ./nuget_staging --config Release -v
      - if: ${{ matrix.arch_config.arch == 'x64' }}
        run: cp nuget\RLClientLibNative-v141-x64.targets nuget_staging\RLClientLibNative-v141-x64.targets
      - name: Package
        shell: powershell
        id: generate-nuget
        run: |
          cp build\nuget\rlclientlib.nuspec nuget_staging\rlclientlib.nuspec
          cp build\binaries\Release\*.dll nuget_staging\bin
          cd nuget_staging
          ..\.nuget\NuGet.exe pack .\rlclientlib.nuspec
          $NugetFileName = Get-ChildItem *.nupkg -name
          echo "::set-output name=NugetFileName::$NugetFileName"
      - name: Upload
        uses: actions/upload-artifact@v1
        with:
          name: ${{ steps.generate-nuget.outputs.NugetFileName }}
          path: nuget_staging/${{ steps.generate-nuget.outputs.NugetFileName }}

  test_nuget_windows:
    needs: [build_nuget_windows]
    name: nuget-test.${{ matrix.toolset }}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: ["windows-2019"]
        toolset: ["v141"]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - uses: ilammy/msvc-dev-cmd@v1
      - uses: actions/download-artifact@v1
        with:
          name: RLClientLibNative-${{matrix.toolset}}-x64.0.1.0.nupkg
          path: downloaded_nugets
      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1
      - name: Build test
        run: |
          ls downloaded_nugets
          .\.nuget\NuGet.exe install -Source ${{ github.workspace }}\downloaded_nugets -OutputDirectory ${{ github.workspace }}\nuget\test\packages\ RLClientLibNative-${{ matrix.toolset }}-x64
          cd nuget\test
          msbuild test-${{ matrix.toolset }}.vcxproj -t:rebuild "-property:Configuration=Release;Platform=x64"
          echo "Run Executable:"
          .\bin\x64\Release\test-${{matrix.toolset}}.exe