name: "CodeQL"

on:
  push:
    branches: [ master ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ master ]
  schedule:
    - cron: '26 11 * * 5'

env:
  VCPKG_DEFAULT_BINARY_CACHE: ${{github.workspace}}/vcpkg_binary_cache

jobs:
  analyze:
    name: Analyze
    container:
      image: vowpalwabbit/ubuntu2004-dev:latest
    runs-on: ${{ matrix.config.os }}
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        config:
        - { language: "cpp", os: ubuntu-latest }
        - { language: "python", os: ubuntu-latest }

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.config.language }}
        config-file: ./.github/codeql/codeql-config.yml
    - name: Install python pip
      if: matrix.config.language == 'python'
      shell: bash
      run: |
        apt update
        apt install -y python3-pip
    - name: Autobuild Python
      if: matrix.config.language == 'python'
      uses: github/codeql-action/autobuild@v2
    - name: Build C++
      if: matrix.config.language == 'cpp'
      shell: bash
      run: |
        apt update
        apt install -y ninja-build
        apt install -y libspdlog-dev libfmt-dev libboost-math-dev
        cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTING=Off -DVCPKG_MANIFEST_MODE=Off
        cmake --build build
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2

  analyze-csharp:
    name: Analyze CSharp bindings
    runs-on: windows-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
    - uses: actions/checkout@v3
    - run: git submodule update --init ext_libs/vcpkg ext_libs/vowpal_wabbit ext_libs/zstd
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: csharp
        config-file: .github/codeql/codeql-config.yml
    - uses: ilammy/msvc-dev-cmd@v1
    - uses: seanmiddleditch/gha-setup-ninja@master
    - run: dotnet tool install --global dotnet-t4

    - name: Setup vcpkg
      run: |
        mkdir -p ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}
        cd ext_libs/vcpkg/
        ./bootstrap-vcpkg.bat
        ./vcpkg --version > ${{ github.workspace }}/vcpkg-version.txt

    - name: Cache vcpkg
      uses: actions/cache@v3
      id: vcpkg-cache
      env:
        cache-name: vcpkg-cache
      with:
        path: ${{ env.VCPKG_DEFAULT_BINARY_CACHE }}/*
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('vcpkg.json', 'vcpkg-version.txt') }}

    - name: Configure .NET Core
      run: >
        cmake -S . -B build -G Ninja
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_TOOLCHAIN_FILE=${{github.workspace}}/ext_libs/vcpkg/scripts/buildsystems/vcpkg.cmake
        -DVCPKG_TARGET_TRIPLET=x64-windows-static
        -DVCPKG_HOST_TRIPLET=x64-windows-static
        -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded
        -Drlclientlib_BUILD_DOTNET=On
        -Drlclientlib_DOTNET_USE_MSPROJECT=Off
        -DBUILD_FLATBUFFERS=Off
        -DRAPIDJSON_SYS_DEP=ON
        -DFMT_SYS_DEP=ON
        -DSPDLOG_SYS_DEP=ON
        -DVW_ZLIB_SYS_DEP=ON
        -DVW_BOOST_MATH_SYS_DEP=ON
        -DVW_BUILD_VW_C_WRAPPER=Off
        -DBUILD_TESTING=Off
        -DRL_OPENSSL_SYS_DEP=On
        -DRL_CPPRESTSDK_SYS_DEP=On

    - run: cmake --build build --config Release -t rl.net.cli

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
